rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Members collection: Only the user can read/write their own data
    match /members/{uid} {
      allow write: if request.auth != null && request.auth.uid == uid;
      allow read: if request.auth == null || request.auth != null; // Allow anyone to read
      
      // Allow public access to the invitationCode field
      allow get: if resource.data.invitationCode != null;
    }

    // Listing collection: Only authenticated users can read, and only the owner can write
    match /listing/{vehicleId} {
      allow read: if request.auth != null; // Authenticated users can read
      allow write: if request.auth != null && request.auth.uid == resource.data.uid; // Only the owner can write

      // Protect sensitive fields like VIN
      allow get: if request.auth != null && (resource.data.hideVin == false || request.auth.uid == resource.data.uid);

      // Receipts subcollection under listing: Only the owner can write
      match /receipts/{receiptId} {
        allow read: if request.auth != null; // Authenticated users can read
        allow write: if request.auth != null && request.auth.uid == get(/databases/$(database)/documents/listing/$(vehicleId)).data.uid; // Owner of the listing can write receipts
      }
    }

    // Conversations collection: Only participants can read/write
    match /conversations/{conversationId} {
      allow read, write: if request.auth != null && request.auth.uid in resource.data.participants;

      // Rules for messages within a conversation
      match /messages/{messageId} {
        allow read, write: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
      }
    }
  }
}

service firebase.storage {
  match /b/{bucket}/o {
    // Allow authenticated users to upload and download files
    match /members/{uid}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == uid;
    }

    match /members/{uid}/profilepicture.png {
      allow write: if request.auth != null && request.auth.uid == uid;
      allow read: if true; // Public read access
    }

    match /listing/{vehicleId}/{allPaths=**} {
      allow read: if request.auth != null; // Allow authenticated users to read files
      allow write: if request.auth != null;
    }

    // Listing photos: Only the owner can write, authenticated users can read
    match /listing/{vehicleId}/photos/{fileName} {
      allow read: if request.auth != null; // Authenticated users can read
      allow write: if request.auth != null && request.auth.uid == resource.metadata.ownerId; // Only the owner can write
    }

    // Listing documents: Only the owner can read/write
    match /listing/{vehicleId}/docs/{allPaths=**} {
      allow write: if request.auth != null && request.auth.uid == resource.metadata.ownerId;
      allow read: if request.auth != null && request.auth.uid == resource.metadata.ownerId; // Ensure only the owner can read
    }

    // Public files (e.g., icons): Publicly readable
    match /public/{allPaths=**} {
      allow read;
    }

    // Maintenance table: Only the owner can read/write
    match /listing/{vehicleId}/maintenance/{allPaths=**} {
      allow write: if request.auth != null && request.auth.uid == resource.metadata.ownerId;
      allow read: if request.auth != null && request.auth.uid == resource.metadata.ownerId; // Ensure only the owner can read
    }
  }
}
